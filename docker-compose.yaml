name: Fashion AI

services:
  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
      args:
        - CONNECTION_STRING=${CONNECTION_STRING}
        - DATABASE_NAME=${DATABASE_NAME}
    image:
      tongducthanhnam/fashion-ai-ai-services:latest
    ports:
      - "8000:8000"
    environment:
      - CONNECTION_STRING=${CONNECTION_STRING}
      - DATABASE_NAME=${DATABASE_NAME}
    networks:
      - app-network
    depends_on:
      - backend
    restart: always  # Automatically restart on error
    volumes:
      - ./ai-services:/app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BACKEND_URL=${BACKEND_URL}
        - NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}
        - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
        - UPLOADTHING_TOKEN=${UPLOADTHING_TOKEN}
        - NEXT_PUBLIC_AI_URL=${NEXT_PUBLIC_AI_URL}
      target: release
    image:
      tongducthanhnam/fashion-ai-fe:latest
    volumes:
      - ./frontend:/app
    ports:
      - "9999:3000"
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - BACKEND_URL=${BACKEND_URL}
      - NEXT_PUBLIC_DOMAIN=${NEXT_PUBLIC_DOMAIN}
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - UPLOADTHING_TOKEN=${UPLOADTHING_TOKEN}
    restart: always  # Automatically restart on error

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - PORT=${PORT}
        - CONNECTION_STRING=${CONNECTION_STRING}
        - DATABASE_NAME=${DATABASE_NAME}
        - JWT_SECRET=${JWT_SECRET}
        - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
        - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
        - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      target: release
    image:
      tongducthanhnam/fashion-ai-be:latest
    ports:
      - "3001:3001"
    environment:
      - PORT=${PORT}
      - HOST=${HOST}
      - CONNECTION_STRING=${CONNECTION_STRING}
      - DATABASE_NAME=${DATABASE_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
    networks:
      - app-network
    volumes:
      - ./backend:/app
    restart: always  # Automatically restart on error

networks:
  app-network:
    driver: bridge